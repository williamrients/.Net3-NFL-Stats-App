@model MVCPresentation.Models.PlayerAndStatsModel

@{
    ViewBag.Title = "Create";

    IEnumerable<String> statName = (IEnumerable<String>)ViewBag.statNamesDDL;
    IEnumerable<String> seasonID = (IEnumerable<String>)ViewBag.seasonIDsDDL;
}

<h2>Create a new Stat</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.player.PlayerID, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
            @Html.ValidationMessageFor(model => model.player.PlayerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Given Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.player.GivenName, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
            @Html.ValidationMessageFor(model => model.player.GivenName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Given Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.player.FamilyName, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
            @Html.ValidationMessageFor(model => model.player.FamilyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Stat Name</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.stats.StatName, new SelectList(statName, "Stat"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.stats.StatName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Stat Amount</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.stats.StatAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.stats.StatAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Season</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.stats.SeasonID, new SelectList(seasonID, "Season"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.stats.SeasonID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
