@model MVCPresentation.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<style>
    h2 {
        text-align: center;
        color: white;
    }

    .registerContainer {
        display: block;
        margin: 5% auto;
        width: 75%;
        max-width: 80vh;
        height: 50%;
        max-height: 50%;
        border: solid 2px #120A19;
        background-color: #013369;
        box-shadow: 0 15px 25px rgba(0,0,0,.6);
        border-radius: 10px;
    }

    label {
        text-align: center;
        color: white;
        display: block;
        margin: auto;
        padding: 15px;
    }

    input {
        display: block;
        margin: 2% auto;
        width: 85%;
        height: 4vh;
        max-height: 30px;
        border-radius: 5px;
        border: solid 2px #120A19;
        background-color: #DBD6DF;
        padding-left: 1px;
        min-height: 35px;
        font-size: 16px;
    }

    .input-validation-error {
        border: 4px solid #ff0000;
        background-color: #ffeeee;
    }

    .field-validation-error {
        background-color: white;
        border-radius: 4px;
        border: solid 1px #333;
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        text-align: right;
    }

</style>

<div class="registerContainer">
    <h2>Register</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <form class="register-form">


            <div>
                <label>First Name</label>
                <div class="registerInput">
                    @Html.TextBoxFor(m => m.GivenName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.GivenName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <label>Last Name</label>
                <div class="registerInput">
                    @Html.TextBoxFor(m => m.FamilyName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FamilyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <label>Email</label>
                <div class="registerInput">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <label>Password</label>
                <div class="registerInput">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <label>Confirm Password</label>
                <div class="registerInput">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <input type="submit" value="Register" style="width: 175px; background-color: white;" />
            </div>

        </form>

    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
