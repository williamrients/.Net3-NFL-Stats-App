@model DataObjects.Teams

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h2>Editting</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Team Mascot</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeamMascot, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeamMascot, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Team City</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeamCity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeamCity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Team State</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeamState, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeamState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div class="btn btn-default">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
